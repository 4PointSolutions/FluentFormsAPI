<?xml version="1.0" encoding="UTF-8"?>
<!-- | Copyright 2015 Adobe Systems Incorporated | | Licensed under the Apache 
	License, Version 2.0 (the "License"); | you may not use this file except 
	in compliance with the License. | You may obtain a copy of the License at 
	| | http://www.apache.org/licenses/LICENSE-2.0 | | Unless required by applicable 
	law or agreed to in writing, software | distributed under the License is 
	distributed on an "AS IS" BASIS, | WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. | See the License for the specific language 
	governing permissions and | limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com._4point.aem.docservices</groupId>
	<artifactId>rest-services</artifactId>
	<packaging>pom</packaging>
	<version>0.0.3-SNAPSHOT</version>
	<description>AEM Document Services REST Services</description>

	<!--
	|   This project can be built with the following command line:
	|   mvn clean install -P adobe-public
	| 
	|   In order to automatically install the resulting rest-services.server bundle, add the autoInstallBundle profile:
	|   mvn clean install -P adobe-public,autoInstallBundle
	|
	 -->

	<modules>
		<module>server</module>
		<module>client</module>
		<module>jersey-client</module>
	</modules>

	<properties>
		<aem.host>localhost</aem.host>
		<aem.port>4502</aem.port>
		<aem.publish.host>localhost</aem.publish.host>
		<aem.publish.port>4503</aem.publish.port>
		<sling.user>admin</sling.user>
		<sling.password>admin</sling.password>
		<vault.user>admin</vault.user>
		<vault.password>admin</vault.password>

		<!--  AEM may be running in Java 8, so compile for that until it's no longer supported. -->
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.release>8</maven.compiler.release>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Core Maven plugin versions -->
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <!-- Packaging Maven plugin versions -->
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <!-- Tools Maven plugin versions -->
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-release-plugin.version>3.0.1</maven-release-plugin.version>

        <!-- Other Maven plugin versions -->
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
        <maven-sling-plugin.version>2.4.2</maven-sling-plugin.version>
        <htl-maven-plugin.version>2.0.2-1.4.0</htl-maven-plugin.version>
        <filevault-package-maven-plugin.version>1.3.6</filevault-package-maven-plugin.version>
        <content-package-maven-plugin.version>1.0.4</content-package-maven-plugin.version>
        <maven-bundle-plugin.version>5.1.8</maven-bundle-plugin.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>

        <!-- Mutation Testing plugin versions -->
		<pitest.maven.plugin.version>1.15.3</pitest.maven.plugin.version>
		<pitest.junit5.maven.plugin.version>1.2.1</pitest.junit5.maven.plugin.version>

		<!-- Project dependencies -->
		<jersey.version>3.1.0</jersey.version>
		<jaxb.version>4.0.0</jaxb.version>
		<commons-io.version>2.7</commons-io.version>
		<sling.servlet-helpers.version>1.2.0</sling.servlet-helpers.version>
		<fluentforms.version>0.0.3-SNAPSHOT</fluentforms.version>
		<rest-services.version>0.0.3-SNAPSHOT</rest-services.version>

		<!-- Testing dependencies -->
        <mockito.version>5.15.2</mockito.version>
        <junit.version>5.11.4</junit.version>
        <wcm.mocks.version>3.0.0</wcm.mocks.version> <!-- Versions later than this produce a org.reflections.ReflectionsException: Scanner TypeAnnotationsScanner was not configured error -->
        <slf4j-test.version>1.2.0</slf4j-test.version>
        <slf4j.version>1.7.26</slf4j.version>
        <hamcrest.version>3.0</hamcrest.version>
        <pdfbox.version>3.0.4</pdfbox.version>
        <jsoup.version>1.16.1</jsoup.version>
        <jcabi-xml-version>0.27.2</jcabi-xml-version>
        <xml-unit-version>2.10.0</xml-unit-version>
        <xerces-version>2.12.2</xerces-version>
        <wiremock.version>3.4.2</wiremock.version>
        <_4point-hamcrest-matchers.version>0.0.1-SNAPSHOT</_4point-hamcrest-matchers.version>
        <junit-addons.version>1.4</junit-addons.version>
	</properties>

	<build>
		<plugins>
			<!-- Maven Release Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<scmCommentPrefix>[maven-scm] :</scmCommentPrefix>
					<preparationGoals>clean install</preparationGoals>
					<goals>install</goals>
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>
			<!-- Maven Source Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<inherited>true</inherited>
			</plugin>
			<!-- Maven Jar Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
			</plugin>
			<!-- Maven Enforcer Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.3.9,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>Project must be compiled
										with Java 8 or higher</message>
									<version>1.8.0</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
    	    <plugin>
                <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.8.6</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<!-- Add this checking -->
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<!-- Ideally, the number below should be 0.9, but we have some code coverage issues.  -->
											<!-- Over time, we should strive to improve code coverage and raise this value.       -->
											<minimum>0.4</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
            </plugin> 
			<plugin>
				<!-- PiTest Mutation Testing plugin -->
				<!-- Run with goals 'test-compile' and 'org.pitest:pitest-maven:mutationCoverage' --> 
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.maven.plugin.version}</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- Maven Clean Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<!-- Maven Resources Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<!-- Maven Compiler Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<!-- Maven Installer Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- Maven Surefire Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<useSystemClassLoader>false</useSystemClassLoader>
					</configuration>
				</plugin>
				<!-- Maven Failsafe Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<!-- Maven Deploy Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- Apache Sling Plugin -->
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
                    <version>${maven-sling-plugin.version}</version> <!--  Use 2.4.0 or later seems to cause the slingUrl to be ignored. -->
					<configuration>
						<slingUrl>http://${aem.host}:${aem.port}/system/console</slingUrl>
						<deploymentMethod>WebConsole</deploymentMethod>
					</configuration>
				</plugin>
				<!-- HTL Maven Plugin -->
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>htl-maven-plugin</artifactId>
                    <version>${htl-maven-plugin.version}</version>
					<configuration>
						<failOnWarnings>true</failOnWarnings>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>validate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Jackrabbit FileVault Package Plugin -->
				<plugin>
					<groupId>org.apache.jackrabbit</groupId>
					<artifactId>filevault-package-maven-plugin</artifactId>
                    <version>${filevault-package-maven-plugin.version}</version>
					<configuration>
						<filterSource>src/main/content/META-INF/vault/filter.xml</filterSource>
					</configuration>
				</plugin>
				<!-- Content Package Plugin -->
				<plugin>
					<groupId>com.day.jcr.vault</groupId>
					<artifactId>content-package-maven-plugin</artifactId>
                    <version>${content-package-maven-plugin.version}</version>
					<configuration>
						<targetURL>http://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
						<failOnError>true</failOnError>
						<userId>${vault.user}</userId>
						<password>${vault.password}</password>
					</configuration>
				</plugin>
				<!-- Apache Felix Bundle Plugin -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
                    <version>${maven-bundle-plugin.version}</version>
					<inherited>true</inherited>
				</plugin>
				<!-- Maven Enforcer Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<!-- Maven Dependency Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
				</plugin>
				<!-- Build Helper Maven Plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
				</plugin>
                <!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.felix</groupId>
                                        <artifactId>maven-bundle-plugin</artifactId>
                                        <versionRange>[1.1,)</versionRange>
                                        <goals>
                                            <goal>manifest</goal>
                                            <goal>bundle</goal>
                                            <goal>install</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>4Point Solutions FluentFormsAPI Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/4PointSolutions/FluentFormsAPI</url>
		</repository>
	</distributionManagement>
	
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/4PointSolutions/*</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<!-- Include Integration Tests -->
			<id>include-it</id>
			<modules>
				<module>it.tests</module>
			</modules>
		</profile>
	</profiles>

	<!-- ====================================================================== -->
	<!-- D E P E N D E N C I E S -->
	<!-- ====================================================================== -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>uk.org.lidalia</groupId>
				<artifactId>slf4j-test</artifactId>
				<version>${slf4j-test.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>	<!-- PDF Library for examining PDFs we generate -->
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${pdfbox.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jcabi</groupId>
				<artifactId>jcabi-xml</artifactId>
				<scope>test</scope>
				<version>${jcabi-xml-version}</version>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-core</artifactId>
				<version>${xml-unit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-matchers</artifactId>
				<version>${xml-unit-version}</version>
                <exclusions>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-library</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-core</artifactId>
					</exclusion>
				</exclusions>
				<scope>test</scope>
			</dependency>
			<dependency>	<!-- required by xml-unit -->
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces-version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Other dependencies -->
			<dependency>
				<groupId>com._4point.aem</groupId>
				<artifactId>fluentforms.core</artifactId>
				<version>${fluentforms.version}</version>
			</dependency>
			<dependency>
				<groupId>com._4point.aem.docservices</groupId>
				<artifactId>rest-services.client</artifactId>
				<version>${rest-services.version}</version>
			</dependency>
			<dependency>
				<groupId>com._4point.aem.docservices.rest-services</groupId>
				<artifactId>rest-services.jersey-client</artifactId>
				<version>${rest-services.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.servlet-helpers</artifactId>
				<version>${sling.servlet-helpers.version}</version>
			</dependency>
			<!-- Jersey Dependencies -->
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-multipart</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!-- XML Bind is required to mock jax.rs.core.Response -->
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>junit-addons</groupId>
				<artifactId>junit-addons</artifactId>
				<version>${junit-addons.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>	<!-- Exclude this really old version of junit that junit-addons depends on -->
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>	<!-- Exclude this really old version of xerces that junit-addons depends on -->
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
					<exclusion>	<!-- Exclude this really old version of xerces that junit-addons depends on -->
						<groupId>xerces</groupId>
						<artifactId>xmlParserAPIs</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-junit5-plugin</artifactId>
			<version>${pitest.junit5.maven.plugin.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.wiremock</groupId>
		    <artifactId>wiremock</artifactId>
		    <version>${wiremock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com._4point.testing</groupId>
			<artifactId>4point-hamcrest-matchers</artifactId>
			<version>${_4point-hamcrest-matchers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
